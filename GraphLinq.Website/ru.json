{
    "nav": {
        "links": {
            "home": "Главная страница",
            "litepaper": "LitePaper",
            "team": "О команде",
            "docs": "Документы",
            "telegram": "Telegram",
            "interface": "Перейти к интерфейсу",
			"marketplace": "Доступ к торговой площадке",
            "language": "Язык"
        }
    },
    "hero": {
        "title": "<span class='dg'>Нокодовый</span> протокол для <strong>разработки блок-цепочки</strong>",
        "subtitle": "Автоматизация мониторинга данных DeFi и внешнего исполнения в многоцепоточных приложениях.",
        "button": "Опирайтесь на нашу IDE",
        "graphs": {
            "$0": {
                "title": "Создать мощные крипто-инструменты",
                "desc": "С помощью GraphLinq вы можете создать эквивалент сотен строк кода за секунды простым перетаскиванием блоков."
            },
            "$1": {
                "title": "За долю пенни",
                "desc": "Большинство операций на GraphLinq стоят долей GLQ, это даже дешевле, чем запуск вашей программы на AWS."
            },
            "$2": {
                "title": "Выполните свой график",
                "desc": "Выполняйте транзакции по блок-цепочке, инициированные событиями, или вызывайте API биржи для запросов на создание торговых приказов."
            }
        }
    },
    "features": {
        "title": "Построение, визуализация, автоматизация задач",
        "subtitle": "<strong>GraphLinq Engine</strong> обеспечивает все потребности в работе с бизнес-логикой, не требуя навыков кодирования.",
        "$0": {
            "title": "Построение <span class='dg'>графиков</span> <strong>визуально с узлами</strong>",
            "desc": {
                "$0": "Узел - это блок, который представляет собой самодостаточный элемент функциональности, например, подключение к сети Ethereum Network, получение данных от конкретного обмена или отправка данных с помощью WebHook.",
                "$1": "GraphLinq Engine поставляется с набором из более чем 100 логических блоков, которые могут быть выполнены с использованием желаемых параметров."
            }
        },
        "$1": {
            "title": "Соедините <span class='dg'>узлы</span> <strong>для определения поведения</strong>",
            "desc": {
                "$0": "Каждый узел имеет как минимум один вход, который принимает значения, подлежащие обработке, и один выход, который дает результаты. Привязка выхода к входу устанавливает путь к данным, позволяющий одному узлу передавать данные другому.",
                "$1": "Используйте этот простой, но мощный принцип, чтобы определить, что вы можете построить."
            }
        },
        "$2": {
            "title": "Загрузка и <span class='dg'>выполнение</span> <strong>непосредственно из интерфейса</strong>",
            "desc": "Как только вы будете готовы развернуть График или использовать готовый шаблон, вы можете использовать интерфейс GraphLinq, чтобы загрузить его и выполнить по сети."
        },
        "$3": {
            "title": "Использовать и <span class='dg'>поделиться</span> <strong>своими шаблонами</strong>",
            "desc": "Создавайте и делитесь своими графиками с миром. Изучайте, что создали другие. Ищите графики сообществ и используйте их повторно в своих дальнейших проектах."
        },
        "$4": {
            "title": "<strong>Жетон</strong> <span class='dg dguni'>GLQ</span>",
            "desc": {
                "$0": "GLQ Token позволяет вам запустить график в нашей тестовой сети или в нашей основной сети для выполнения различных процессов над блок-цепочкой для автоматизации ваших задач. GLQ-токен будет записываться каждый раз, когда график выполняет один блок.",
                "$1": "Вы можете получить больше информации о жетоне GLQ здесь."
            },
            "button": "Перейти на Uniswap"
        }
    },
    "cta": {
        "title": "<span class='dg'>Готовы ли вы создать</span> свой Первый График по нашему Протоколу?",
        "button-ide": "Перейти к интегрированной окружающей среде",
        "button-app": "Создать кошелек"
    },
    "usecases": {
        "title": "Как люди используют <span class='dg'>GraphLinq</span>",
        "subtitle": "Имея возможность создавать собственные графики и использовать различные готовые блоки, <u>единственный предел - это ваше воображение.</u>",
        "testimonials": {
            "$0": {
                "title": "Удивительный пользовательский опыт",
                "desc": "Даже если вы уже являетесь разработчиком, GraphLinq позволяет проверить свои идеи без необходимости запускать терминал."
            },
            "$1": {
                "title": "Развитие моих платежных услуг",
                "desc": "Я искал крипто-проект, чтобы помочь мне создать автоматизированный бот для обработки подписки моего нового участника на Телеграмму, я сделал это в несколько кликов с помощью команды GraphLinq."
            },
            "$2": {
                "title": "Мониторинг",
                "desc": "Мне нужен был способ мониторинга конкретной пары на Uniswap, в которую я инвестировал, я создал свои графики и связал все потоки данных с моим аккаунтом Discord, а также добавил условный триггер при изменении цен."
            },
            "$3": {
                "title": "Финансовый трейдер",
                "desc": "Я являюсь трейдером Бинансового дня, я использовал один шаблон Графика, чтобы связать меня с деятельностью Бинансового дня и децентрализованным протоколом AMM, таким образом, я могу инициировать арбитражные события для выполнения сделки с моим API Бинансового дня."
            },
            "$4": {
                "title": "Сообщение о китах",
                "desc": "Я создал свой график, который предупреждает меня в режиме реального времени о событиях веб-крюка на мой выделенный сервер всякий раз, когда киты перемещали свои средства с одного кошелька на другой."
            },
            "$5": {
                "title": "Следуя моим инвестициям",
                "desc": "Используя шаблон, я изменил и развернул свой график, чтобы сообщить мне, когда цена Ethereum движется на моем бот Телеграмма, это помогает мне знать, когда купить или продать с моих первоначальных инвестиций."
            }
        }
    },
    "community": {
        "title": "<span class='dg'>Сообщество</span> GraphLinq",
        "subtitle": "Узнайте о GraphLinq, обсудите с командой и другими членами сообщества.",
        "social": {
            "telegram": {
                "desc": "Наиболее часто используемая сеть для обсуждения с сообществом и командой."
            },
            "twitter": {
                "desc": "Следите за новостями в прямом эфире и анонсом от команды GraphLinq"
            },
            "discord": {
                "desc": "Чат с сообществом на безопасной и более прохладной платформе."
            },
            "medium": {
                "desc": "Ознакомьтесь с последней информацией от команды и деталями разработки"
            }
        }
    },
    "footer": {
        "copyright": "<strong>GraphLinq © Авторское право 2021</strong>. Все права защищены.",
        "column": {
            "$0": {
                "title": "GraphLinq",
                "links": {
                    "$0": "Документация",
                    "$1": "Условия предоставления услуг",
                    "$2": "Политика конфиденциальности"
                }
            },
            "$1": {
                "title": "Продукция",
                "links": {
                    "$0": "Interface",
                    "$1": "IDE",
                    "$2": "Analytics"
                }
            },
            "$2": {
                "title": "Ресурсы",
                "links": {
                    "$0": "Github",
                    "$1": "Uniswap URL",
                    "$2": "Medium Articles"
                }
            },
            "$3": {
                "title": "Следуйте за нами",
                "links": {
                    "$0": "Twitter",
                    "$1": "Linkedin",
                    "$2": "Youtube",
                    "$3": "Instagram",
                    "$4": "Reddit"
                }
            }
        }
    }
}